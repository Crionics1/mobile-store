// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileStore.Repository;

namespace MobileStore.Repository.Migrations
{
    [DbContext(typeof(MobileDbContext))]
    partial class MobileDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MobileStore.Domain.Entities.Manufacturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("MobileStore.Domain.Entities.MobilePhone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayResolution")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ManufacturerID");

                    b.Property<string>("Memory")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(50);

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Size")
                        .HasMaxLength(50);

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ManufacturerID");

                    b.ToTable("MobilePhones");
                });

            modelBuilder.Entity("MobileStore.Domain.Entities.Visual", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MobilePhoneID");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("MobilePhoneID");

                    b.ToTable("Visuals");
                });

            modelBuilder.Entity("MobileStore.Domain.Entities.MobilePhone", b =>
                {
                    b.HasOne("MobileStore.Domain.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobileStore.Domain.Entities.Visual", b =>
                {
                    b.HasOne("MobileStore.Domain.Entities.MobilePhone", "MobilePhone")
                        .WithMany("Visuals")
                        .HasForeignKey("MobilePhoneID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
